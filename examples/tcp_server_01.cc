#include <string>
#include <iostream>
#include <stdio.h>
#include <string.h>
#include "socket.hh"

///////////////////////////////////////////////////////////////////////////////////////
//main
///////////////////////////////////////////////////////////////////////////////////////

void handle_client(socket_t& socket);

int main(int argc, char *argv[])
{
  tcp_server_t server(2000);
  while (true)
  {
    socket_t socket = server.accept_client();
    handle_client(socket);
    socket.close();
  }
  server.close();
  return 0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//handle_client
//do some test read and write
//end of message is "\r\n"
/////////////////////////////////////////////////////////////////////////////////////////////////////

void handle_client(socket_t& socket)
{
  char buf[255];
  int recv_size;
  recv_size = socket.read_some(buf, sizeof(buf));

  /////////////////////////////////////////////////////////////////////////////////////////////////////
  //read
  /////////////////////////////////////////////////////////////////////////////////////////////////////

  //strip extra charactes received (size is not known, detect end of message)
  std::string str(buf);
  size_t pos = str.find("\r\n");
  std::string str_message(str.substr(0, pos + 2));
  std::cout << "server received " << recv_size << " bytes: " << str_message;

  /////////////////////////////////////////////////////////////////////////////////////////////////////
  //write
  /////////////////////////////////////////////////////////////////////////////////////////////////////

  sprintf(buf, "67\r\n");
  socket.write(buf, strlen(buf));
  std::cout << "server sent " << strlen(buf) << " bytes: " << buf;



}


