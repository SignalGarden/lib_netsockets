#ifndef LIB_SOCKET_H
#define LIB_SOCKET_H

/////////////////////////////////////////////////////////////////////////////////////////////////////
//socket_t
/////////////////////////////////////////////////////////////////////////////////////////////////////

class socket_t
{
public:
  socket_t(int socket) : m_socket(socket)
  {
  };
  ~socket_t()
  {
  };

  void write(const void *buf, int size_buf);
  int read(void *buf, int size_buf);
  void close();

protected:
  int m_socket; // socket descriptor 
};

/////////////////////////////////////////////////////////////////////////////////////////////////////
//tcp_server_t
/////////////////////////////////////////////////////////////////////////////////////////////////////

class tcp_server_t : public socket_t
{
public:
  tcp_server_t(const unsigned short server_port);
  socket_t accept_client();
  ~tcp_server_t();
};

/////////////////////////////////////////////////////////////////////////////////////////////////////
//tcp_client_t
/////////////////////////////////////////////////////////////////////////////////////////////////////

class tcp_client_t : public socket_t
{
public:
  tcp_client_t(const char *server_ip, const unsigned short server_port);
  ~tcp_client_t();
};

#endif